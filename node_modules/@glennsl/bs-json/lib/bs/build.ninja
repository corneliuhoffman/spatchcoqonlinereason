bs_package_flags = -bs-package-name @glennsl/bs-json
src_root_dir = /Users/Hoff/Documents/reactut/spatchcoqonlinereason/node_modules/@glennsl/bs-json
bsc = /Users/Hoff/Documents/reactut/spatchcoqonlinereason/node_modules/bs-platform/lib/bsc.exe
bsdep = /Users/Hoff/Documents/reactut/spatchcoqonlinereason/node_modules/bs-platform/lib/bsb_helper.exe
warnings = -w -30-40+6+7+27+32..39+44+45+101
bsc_flags = -bs-suffix -nostdlib -I '/Users/Hoff/Documents/reactut/spatchcoqonlinereason/node_modules/bs-platform/lib/ocaml' -bs-no-version-header -bs-super-errors -no-alias-deps -color always
ppx_flags = 
bs_package_includes = 
bs_package_dev_includes = 
namespace = 
bsb_dir_group = 0
bsc_group_1_includes = 
bsc_group_2_includes = 
bsc_group_3_includes = 
bsc_group_4_includes = 
bsc_group_5_includes = 
bsc_group_6_includes = 
bsc_group_7_includes = 
bsc_group_8_includes = 
bsc_group_9_includes = 
bsc_group_10_includes = 
bsc_group_11_includes = 
bsc_group_12_includes = 
bsc_group_13_includes = 
bsc_lib_includes = -I src
rule build_ast_and_module_sets
  command = ${bsc}  ${pp_flags} ${ppx_flags} ${warnings} ${bsc_flags} -c -o ${out} -bs-syntax-only -bs-binary-ast ${in}
  description = [34mBuilding[39m [2m${out}[22m
build src/Json.mliast : build_ast_and_module_sets $src_root_dir/src/Json.mli
rule build_deps
  command = ${bsdep} ${namespace} -g ${bsb_dir_group} -MD ${in}
  description = [34mBuilding[39m [2m${out}[22m
build src/Json.mliast.d : build_deps src/Json.mliast
rule build_cmi
  command = ${bsc} ${bs_package_flags} -bs-no-builtin-ppx-mli -bs-no-implicit-include ${bs_package_includes} ${bsc_lib_includes} ${bsc_extra_includes} ${warnings} ${bsc_flags} -o ${out} -c  ${in}
  depfile = ${in}.d
  description = [34mBuilding[39m [2m${out}[22m
build src/Json.cmi : build_cmi src/Json.mliast
  bs_package_flags = $bs_package_flags  -bs-package-output commonjs:lib/js/src
build src/Json.mlast : build_ast_and_module_sets $src_root_dir/src/Json.ml
build src/Json.mlast.d : build_deps src/Json.mlast
rule build_cmj_only
  command = ${bsc} ${bs_package_flags} -bs-assume-has-mli -bs-no-builtin-ppx-ml -bs-no-implicit-include  ${bs_package_includes} ${bsc_lib_includes} ${bsc_extra_includes} ${warnings} ${bsc_flags} -o ${out} -c  ${in} $postbuild
  depfile = ${in}.d
  description = [34mBuilding[39m [2m${out}[22m
build src/Json.cmj |  $src_root_dir/lib/js/src/Json.bs.js : build_cmj_only src/Json.mlast |  src/Json.cmi
  bs_package_flags = $bs_package_flags  -bs-package-output commonjs:lib/js/src
build src/Json_decode.mliast : build_ast_and_module_sets $src_root_dir/src/Json_decode.mli
build src/Json_decode.mliast.d : build_deps src/Json_decode.mliast
build src/Json_decode.cmi : build_cmi src/Json_decode.mliast
  bs_package_flags = $bs_package_flags  -bs-package-output commonjs:lib/js/src
build src/Json_decode.mlast : build_ast_and_module_sets $src_root_dir/src/Json_decode.ml
build src/Json_decode.mlast.d : build_deps src/Json_decode.mlast
build src/Json_decode.cmj |  $src_root_dir/lib/js/src/Json_decode.bs.js : build_cmj_only src/Json_decode.mlast |  src/Json_decode.cmi
  bs_package_flags = $bs_package_flags  -bs-package-output commonjs:lib/js/src
build src/Json_encode.mliast : build_ast_and_module_sets $src_root_dir/src/Json_encode.mli
build src/Json_encode.mliast.d : build_deps src/Json_encode.mliast
build src/Json_encode.cmi : build_cmi src/Json_encode.mliast
  bs_package_flags = $bs_package_flags  -bs-package-output commonjs:lib/js/src
build src/Json_encode.mlast : build_ast_and_module_sets $src_root_dir/src/Json_encode.ml
build src/Json_encode.mlast.d : build_deps src/Json_encode.mlast
build src/Json_encode.cmj |  $src_root_dir/lib/js/src/Json_encode.bs.js : build_cmj_only src/Json_encode.mlast |  src/Json_encode.cmi
  bs_package_flags = $bs_package_flags  -bs-package-output commonjs:lib/js/src
build build.ninja : phony  ||  src/Json_encode.mlast.d src/Json_encode.mliast.d src/Json_decode.mlast.d src/Json_decode.mliast.d src/Json.mlast.d src/Json.mliast.d
