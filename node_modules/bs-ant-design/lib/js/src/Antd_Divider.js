// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Js_option = require("bs-platform/lib/js/js_option.js");
var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Antd_Helpers = require("./Antd_Helpers.js");
var Divider = require("antd/lib/divider");

((require("antd/lib/divider/style")));

var jsMapperConstantArray = /* array */[
  /* tuple */[
    -367674250,
    "vertical"
  ],
  /* tuple */[
    365165796,
    "horizontal"
  ]
];

function dividerTypeToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray);
}

function dividerTypeFromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray, param);
}

function make(_type, dash, id, className, style, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(dividerTypeToJs, _type);
  if (tmp$1) {
    tmp.type = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Antd_Helpers.from_bool, dash);
  if (tmp$2) {
    tmp.dash = tmp$2[0];
  }
  if (id) {
    tmp.id = id[0];
  }
  if (className) {
    tmp.className = className[0];
  }
  if (style) {
    tmp.style = style[0];
  }
  return ReasonReact.wrapJsForReason(Divider, tmp, children);
}

exports.dividerTypeToJs = dividerTypeToJs;
exports.dividerTypeFromJs = dividerTypeFromJs;
exports.make = make;
/*  Not a pure module */
