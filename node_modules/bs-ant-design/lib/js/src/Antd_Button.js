// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Js_option = require("bs-platform/lib/js/js_option.js");
var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Antd_Helpers = require("./Antd_Helpers.js");
var Button = require("antd/lib/button");

((require("antd/lib/button/style")));

var jsMapperConstantArray = /* array */[
  /* tuple */[
    58474434,
    "primary"
  ],
  /* tuple */[
    324570959,
    "ghost"
  ],
  /* tuple */[
    512905955,
    "danger"
  ],
  /* tuple */[
    568403505,
    "dashed"
  ]
];

function buttonTypeToJs(param) {
  return Js_mapperRt.binarySearch(4, param, jsMapperConstantArray);
}

function buttonTypeFromJs(param) {
  return Js_mapperRt.revSearch(4, jsMapperConstantArray, param);
}

var jsMapperConstantArray$1 = /* array */[
  /* tuple */[
    -291819694,
    "circle-outline"
  ],
  /* tuple */[
    -172598249,
    "circle'"
  ]
];

function buttonShapeToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray$1);
}

function buttonShapeFromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray$1, param);
}

var jsMapperConstantArray$2 = /* array */[
  /* tuple */[
    -272944197,
    "large"
  ],
  /* tuple */[
    -9768761,
    "small"
  ],
  /* tuple */[
    465819841,
    "default"
  ]
];

function buttonSizeToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$2);
}

function buttonSizeFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$2, param);
}

function toJs(param) {
  if (param.tag) {
    return param[0];
  } else {
    return Antd_Helpers.from_bool(param[0]);
  }
}

var LoadingProps = /* module */[/* toJs */toJs];

function make(_type, htmlType, icon, shape, size, onClick, onMouseUp, onMouseDown, tabIndex, loading, disabled, ghost, target, href, download, id, className, style, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(buttonTypeToJs, _type);
  if (tmp$1) {
    tmp.type = tmp$1[0];
  }
  if (htmlType) {
    tmp.htmlType = htmlType[0];
  }
  if (icon) {
    tmp.icon = icon[0];
  }
  var tmp$2 = Js_option.map(buttonShapeToJs, shape);
  if (tmp$2) {
    tmp.shape = tmp$2[0];
  }
  var tmp$3 = Js_option.map(buttonSizeToJs, size);
  if (tmp$3) {
    tmp.size = tmp$3[0];
  }
  if (onClick) {
    tmp.onClick = onClick[0];
  }
  if (onMouseUp) {
    tmp.onMouseUp = onMouseUp[0];
  }
  if (onMouseDown) {
    tmp.onMouseDown = onMouseDown[0];
  }
  if (tabIndex) {
    tmp.tabIndex = tabIndex[0];
  }
  var tmp$4 = Js_option.map(toJs, loading);
  if (tmp$4) {
    tmp.loading = tmp$4[0];
  }
  var tmp$5 = Js_option.map(Antd_Helpers.from_bool, disabled);
  if (tmp$5) {
    tmp.disabled = tmp$5[0];
  }
  var tmp$6 = Js_option.map(Antd_Helpers.from_bool, ghost);
  if (tmp$6) {
    tmp.ghost = tmp$6[0];
  }
  if (target) {
    tmp.target = target[0];
  }
  if (href) {
    tmp.href = href[0];
  }
  if (download) {
    tmp.download = download[0];
  }
  if (id) {
    tmp.id = id[0];
  }
  if (className) {
    tmp.className = className[0];
  }
  if (style) {
    tmp.style = style[0];
  }
  return ReasonReact.wrapJsForReason(Button, tmp, children);
}

var IconName = 0;

exports.IconName = IconName;
exports.buttonTypeToJs = buttonTypeToJs;
exports.buttonTypeFromJs = buttonTypeFromJs;
exports.buttonShapeToJs = buttonShapeToJs;
exports.buttonShapeFromJs = buttonShapeFromJs;
exports.buttonSizeToJs = buttonSizeToJs;
exports.buttonSizeFromJs = buttonSizeFromJs;
exports.LoadingProps = LoadingProps;
exports.make = make;
/*  Not a pure module */
