// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Js_option = require("bs-platform/lib/js/js_option.js");
var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Antd_Helpers = require("./Antd_Helpers.js");
var Spin = require("antd/lib/spin");

((require("antd/lib/spin/style")));

var jsMapperConstantArray = /* array */[
  /* tuple */[
    -272944197,
    "large"
  ],
  /* tuple */[
    -9768761,
    "small"
  ],
  /* tuple */[
    465819841,
    "default"
  ]
];

function sizeToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray);
}

function sizeFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray, param);
}

function make(size, spinning, tip, delay, wrapperClassName, id, className, style, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(sizeToJs, size);
  if (tmp$1) {
    tmp.size = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Antd_Helpers.from_bool, spinning);
  if (tmp$2) {
    tmp.spinning = tmp$2[0];
  }
  if (tip) {
    tmp.tip = tip[0];
  }
  if (delay) {
    tmp.delay = delay[0];
  }
  if (wrapperClassName) {
    tmp.wrapperClassName = wrapperClassName[0];
  }
  if (id) {
    tmp.id = id[0];
  }
  if (className) {
    tmp.className = className[0];
  }
  if (style) {
    tmp.style = style[0];
  }
  return ReasonReact.wrapJsForReason(Spin, tmp, children);
}

exports.sizeToJs = sizeToJs;
exports.sizeFromJs = sizeFromJs;
exports.make = make;
/*  Not a pure module */
