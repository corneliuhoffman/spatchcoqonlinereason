// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Js_option = require("bs-platform/lib/js/js_option.js");
var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Avatar = require("antd/lib/avatar");

((require("antd/lib/avatar/style")));

var jsMapperConstantArray = /* array */[
  /* tuple */[
    -703761904,
    "circle"
  ],
  /* tuple */[
    -655228771,
    "square"
  ]
];

function avatarShapeToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray);
}

function avatarShapeFromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray, param);
}

var jsMapperConstantArray$1 = /* array */[
  /* tuple */[
    -272944197,
    "large"
  ],
  /* tuple */[
    -9768761,
    "small"
  ],
  /* tuple */[
    465819841,
    "default"
  ]
];

function avatarSizeToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$1);
}

function avatarSizeFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$1, param);
}

function make(shape, size, src, icon, prefixCls, id, className, style, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(avatarShapeToJs, shape);
  if (tmp$1) {
    tmp.shape = tmp$1[0];
  }
  var tmp$2 = Js_option.map(avatarSizeToJs, size);
  if (tmp$2) {
    tmp.size = tmp$2[0];
  }
  if (src) {
    tmp.src = src[0];
  }
  if (icon) {
    tmp.icon = icon[0];
  }
  if (prefixCls) {
    tmp.prefixCls = prefixCls[0];
  }
  if (id) {
    tmp.id = id[0];
  }
  if (className) {
    tmp.className = className[0];
  }
  if (style) {
    tmp.style = style[0];
  }
  return ReasonReact.wrapJsForReason(Avatar, tmp, children);
}

var IconName = 0;

exports.IconName = IconName;
exports.avatarShapeToJs = avatarShapeToJs;
exports.avatarShapeFromJs = avatarShapeFromJs;
exports.avatarSizeToJs = avatarSizeToJs;
exports.avatarSizeFromJs = avatarSizeFromJs;
exports.make = make;
/*  Not a pure module */
