// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Text = require("./text.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var ReactDOMRe = require("reason-react/lib/js/src/ReactDOMRe.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var TouchableOpacity = require("./touchableOpacity.js");

var component = ReasonReact.statelessComponent("Dialog");

var root = {
  display: "flex",
  height: "100vh",
  padding: "40px 10px",
  width: "100vw",
  alignItems: "center",
  flexDirection: "column",
  justifyContent: "flex-start",
  boxSizing: "border-box"
};

var container = {
  backgroundColor: "#fff",
  display: "flex",
  overflow: "hidden",
  position: "relative",
  zIndex: "0",
  borderRadius: "4px",
  boxShadow: "0 2px 4px rgba(0, 0, 0, 0.16)",
  flexDirection: "column"
};

var header = {
  borderBottom: "1px solid rgba(0, 0, 0, 0.1)",
  display: "flex",
  alignItems: "center",
  flexDirection: "row",
  flexShrink: "0"
};

var headerText = {
  display: "flex",
  minWidth: "0",
  padding: "10px",
  alignItems: "flex-start",
  flexDirection: "column",
  flexGrow: "1"
};

var headerTitle = {
  color: "rgba(0, 0, 0, 0.4)",
  fontSize: "16px",
  fontWeight: "700",
  wordBreak: "break-word"
};

var headerDescription = {
  color: "rgba(0, 0, 0, 0.4)",
  fontSize: "12px",
  wordBreak: "break-word"
};

var close = {
  padding: "10px"
};

var closeIcon = {
  opacity: "0.4"
};

var contents = {
  display: "flex",
  overflow: "auto",
  flexDirection: "column",
  flexGrow: "1"
};

var Styles = /* module */[
  /* root */root,
  /* container */container,
  /* header */header,
  /* headerText */headerText,
  /* headerTitle */headerTitle,
  /* headerDescription */headerDescription,
  /* close */close,
  /* closeIcon */closeIcon,
  /* contents */contents
];

var defaultUnderlayColor = "rgba(0, 0, 0, 0.3)";

function make(title, description, onPressClose, $staropt$star, maxWidth, $staropt$star$1, underlayStyle, children) {
  var minWidth = $staropt$star ? $staropt$star[0] : 0;
  var underlayColor = $staropt$star$1 ? $staropt$star$1[0] : defaultUnderlayColor;
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      return React.createElement("div", {
                  style: root
                }, React.createElement("div", {
                      style: ReactDOMRe.Style[/* combine */0]({
                            backgroundColor: underlayColor,
                            bottom: "0",
                            left: "0",
                            position: "fixed",
                            right: "0",
                            top: "0",
                            transition: "background-color .5s ease-in-out"
                          }, underlayStyle ? underlayStyle[0] : { }),
                      onClick: (function () {
                          return Curry._1(onPressClose, /* () */0);
                        })
                    }), React.createElement("div", {
                      style: ReactDOMRe.Style[/* combine */0](container, {
                            maxWidth: maxWidth ? String(maxWidth[0]) + "px" : "",
                            minWidth: String(minWidth) + "px"
                          })
                    }, React.createElement("div", {
                          style: header
                        }, React.createElement("div", {
                              style: headerText
                            }, ReasonReact.element(/* None */0, /* None */0, Text.make(/* Some */[headerTitle], /* array */[title])), description ? ReasonReact.element(/* None */0, /* None */0, Text.make(/* Some */[headerDescription], /* array */[description[0]])) : null), ReasonReact.element(/* None */0, /* None */0, TouchableOpacity.make(onPressClose, /* Some */[close], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[React.createElement("span", {
                                        style: closeIcon
                                      }, "✖️")]))), React.createElement("div", {
                          style: contents
                        }, Caml_array.caml_array_get(children, 0))));
    });
  return newrecord;
}

exports.component = component;
exports.Styles = Styles;
exports.defaultUnderlayColor = defaultUnderlayColor;
exports.make = make;
/* component Not a pure module */
