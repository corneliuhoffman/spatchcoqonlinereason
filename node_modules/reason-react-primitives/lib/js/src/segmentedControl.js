// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var ReactDOMRe = require("reason-react/lib/js/src/ReactDOMRe.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var TouchableOpacity = require("./touchableOpacity.js");

var component = ReasonReact.statelessComponent("SegmentedControl");

function make(segments, activeSegment, color, onSegmentPress, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      return React.createElement("div", {
                  style: {
                    border: "1px solid " + color,
                    display: "flex",
                    overflow: "hidden",
                    borderRadius: "3px",
                    flexDirection: "row"
                  }
                }, $$Array.of_list(List.mapi((function (index, param) {
                            var value = param[1];
                            var match = Caml_obj.caml_equal(value, activeSegment);
                            return ReasonReact.element(/* Some */[String(index)], /* None */0, TouchableOpacity.make((function () {
                                              return Curry._1(onSegmentPress, value);
                                            }), /* Some */[ReactDOMRe.Style[/* combine */0]({
                                                  fontSize: "14px",
                                                  padding: "5px",
                                                  textAlign: "center",
                                                  boxShadow: "1px 0 " + color,
                                                  flexGrow: "1"
                                                }, match !== 0 ? ({
                                                      backgroundColor: color,
                                                      color: "#fff"
                                                    }) : ({
                                                      color: color
                                                    }))], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[param[0]]));
                          }), segments)));
    });
  return newrecord;
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
