// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var $$String = require("bs-platform/lib/js/string.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");

function Make(SpriteSheet) {
  var index = $$String.rindex(SpriteSheet[/* url */2], /* "/" */47) + 1 | 0;
  var basename = $$String.sub(SpriteSheet[/* url */2], index, SpriteSheet[/* url */2].length - index | 0);
  var component = ReasonReact.reducerComponent("Sprite[" + (basename + "]"));
  var make = function (width, height, x, y, _) {
    var newrecord = component.slice();
    newrecord[/* didMount */4] = (function () {
        return /* Update */Block.__(0, [/* record */[/* isReady : true */1]]);
      });
    newrecord[/* render */9] = (function (param) {
        var match = param[/* state */2][/* isReady */0];
        return React.createElement("div", {
                    style: {
                      backgroundImage: match !== 0 ? "url(" + (SpriteSheet[/* url */2] + ")") : "",
                      backgroundPosition: "-" + (String(x) + ("px -" + (String(y) + "px"))),
                      height: String(height) + "px",
                      width: String(width) + "px",
                      backgroundSize: String(SpriteSheet[/* width */0]) + ("px " + (String(SpriteSheet[/* height */1]) + "px"))
                    }
                  });
      });
    newrecord[/* initialState */10] = (function () {
        return /* record */[/* isReady : false */0];
      });
    newrecord[/* reducer */12] = (function (_, _$1) {
        return /* NoUpdate */0;
      });
    return newrecord;
  };
  return /* module */[
          /* basename */basename,
          /* component */component,
          /* make */make
        ];
}

exports.Make = Make;
/* react Not a pure module */
