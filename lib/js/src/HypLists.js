// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var GoalPicker = require("./GoalPicker.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("HypLists");

function handleClick(_, _$1) {
  return /* () */0;
}

function make(name, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      var goalsplit = name.split("\n============================\n");
      if (goalsplit.length === 2) {
        var hyps = Caml_array.caml_array_get(goalsplit, 0).split("\n");
        var conc = Caml_array.caml_array_get(goalsplit, 1);
        var hypButtons = $$Array.mapi((function (s, x) {
                return ReasonReact.element(/* Some */[String(s)], /* None */0, GoalPicker.make(x, "lightgreen", /* false */0, /* array */[]));
              }), hyps);
        var concButton = /* array */[ReasonReact.element(/* Some */[String(hyps.length)], /* None */0, GoalPicker.make(conc, "pink", /* true */1, /* array */[]))];
        var goal = $$Array.append(hypButtons, concButton);
        return React.createElement("div", {
                    style: {
                      width: "100%"
                    }
                  }, goal);
      } else {
        return null;
      }
    });
  return newrecord;
}

exports.component = component;
exports.handleClick = handleClick;
exports.make = make;
/* component Not a pure module */
