// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Index = require("./technical/index.js");
var Utils = require("./technical/utils.js");
var $$String = require("bs-platform/lib/js/string.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Coqmanager = require("./technical/coqmanager.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Dropdown$BsReactstrap = require("bs-reactstrap/lib/js/src/Dropdown.bs.js");
var DropdownItem$BsReactstrap = require("bs-reactstrap/lib/js/src/DropdownItem.bs.js");
var DropdownMenu$BsReactstrap = require("bs-reactstrap/lib/js/src/DropdownMenu.bs.js");
var DropdownToggle$BsReactstrap = require("bs-reactstrap/lib/js/src/DropdownToggle.bs.js");

var component = ReasonReact.reducerComponent("NGoalPicker");

function handleClick(_, _$1) {
  return /* () */0;
}

function make(name, color, goal, _) {
  var newrecord = component.slice();
  newrecord[/* didUpdate */5] = (function () {
      return (MathJax.Hub.Queue(["Typeset",MathJax.Hub,root]));
    });
  newrecord[/* render */9] = (function (self) {
      var toggle = function () {
        return Curry._1(self[/* send */4], /* Toggle */0);
      };
      var z;
      if (goal) {
        z = "$" + (Index.mylatex(name) + "$");
      } else {
        var li = name.split(":");
        if (li.length > 1) {
          var h = Caml_array.caml_array_get(li, 0);
          var tl = Index.mylatex($$String.concat(":", $$Array.to_list($$Array.sub(li, 1, li.length - 1 | 0))));
          z = "\$ \\mathbf{" + (String(h) + (" :\\ } " + (String(tl) + " \$ ")));
        } else {
          z = Caml_array.caml_array_get(li, 0);
        }
      }
      var options = $$Array.of_list(Coqmanager.maketab(name, goal));
      return ReasonReact.element(/* None */0, /* None */0, Dropdown$BsReactstrap.make(/* None */0, /* None */0, /* None */0, /* None */0, /* Some */[self[/* state */2][/* dropdownOpen */0]], /* None */0, /* None */0, /* None */0, /* Some */["sm"], /* None */0, /* Some */[toggle], /* None */0, /* None */0, /* None */0, /* array */[
                      ReasonReact.element(/* None */0, /* None */0, DropdownToggle$BsReactstrap.make(/* None */0, /* Some */[color], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["" + (String(z) + "")])),
                      ReasonReact.element(/* None */0, /* None */0, DropdownMenu$BsReactstrap.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[$$Array.map((function (x) {
                                        return ReasonReact.element(/* Some */[x], /* None */0, DropdownItem$BsReactstrap.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[(function () {
                                                            editor2.setValue(x + ("\n" + Utils.getText(/* () */0)));
                                                            return /* () */0;
                                                          })], /* None */0, /* None */0, /* None */0, /* array */[x]));
                                      }), options)]))
                    ]));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* dropdownOpen */(false)];
    });
  newrecord[/* reducer */12] = (function (_, state) {
      return /* Update */Block.__(0, [/* record */[/* dropdownOpen */1 - state[/* dropdownOpen */0]]]);
    });
  return newrecord;
}

exports.component = component;
exports.handleClick = handleClick;
exports.make = make;
/* component Not a pure module */
